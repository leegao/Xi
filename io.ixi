// I/O support

print(str: int[])     // Print a string to standard output.
println(str: int[])   // Print a string to standard output, followed by a newline.
readln() : int[]      // Read from standard input until a newline.
getchar() : int       // Read a single character from standard input.
eof() : bool          // Test for end of file on standard input.

// OO Xi I/O extensions
class OutputStream {
    puts(s: int[]) // output the string s
    putc(c: int) // output the character whose ASCII value is c
    flush() // make sure any pending output is flushed
}

class InputStream {
    gets(): int[] // read a line from the input
    getc(): int // read a single character from the input
    feof(): bool // return whether the end of file has been reached on the input
}

class FileOutput extends OutputStream {
    close() // files can additionally be closed
}

class FileInput extends InputStream {
    close() // files can additionally be closed
}

stdout(): OutputStream
	// Return the standard output stream

stdin(): InputStream
	// Return the standard input stream

readFile(filename: int[]): FileInput
	// Open the named file for reading.  Return null on failure.

createFile(filename: int[]): FileOutput
	// If the file does not exist, create it and return a FileOutput that
	// will write to the file.  If the file cannot be created, return null.

appendFile(filename: int[]): FileOutput
	// If the file can be opened, return a FileOutput that appends to it.
	// Otherwise, return null.

removeFile(filename: int[]): bool
	// Remove the file and return true if successful
